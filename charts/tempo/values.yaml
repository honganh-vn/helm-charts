nameOverride: ""
fullnameOverride: ""

image:
  repository: grafana/tempo
  tag: 2.1.1
  pullPolicy: IfNotPresent
  pullSecrets: []

config:
  server:
    http_listen_port: 3200
    grpc_listen_port: 9095
    log_format: logfmt
    log_level: info
  metrics_generator:
    storage:
      path: /var/lib/tempo/metrics

ringKVStore:
  store: memberlist  # consul | etcd | inmemory | memberlist

  memberlist:
    bind_port: 7946

  # consul:
  # etcd:

storage:
  backend: local  # s3 | gcs | azure | local
  # s3:
  # gcs:
  # azure:
  # local:

  cache: null # redis | memcached
  # memcached:
  # redis:

  wal:
    path: /var/lib/tempo/wal
    v2_encoding: zstd
    search_encoding: snappy
  block:
    version: vParquet
    v2_encoding: zstd
    search_encoding: snappy

receivers:
  # https://github.com/open-telemetry/opentelemetry-collector/blob/receiver/otlpreceiver/v0.80.0/receiver/otlpreceiver/config.go#L28
  otlp:
    enabled: true
    # https://github.com/open-telemetry/opentelemetry-collector/blob/receiver/otlpreceiver/v0.80.0/config/configgrpc/configgrpc.go#L119
    protocols:
      grpc:
        enabled: true
        port: 4317
      # https://github.com/open-telemetry/opentelemetry-collector/blob/receiver/otlpreceiver/v0.80.0/config/confighttp/confighttp.go#L203
      http:
        enabled: true
        port: 4318
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/v0.80.0/receiver/jaegerreceiver/config.go#L70
  jaeger:
    enabled: false
    protocols:
      grpc:
        enabled: true
        port: 14250
      thrift_http:
        enabled: true
        port: 14268
      thrift_binary:
        enabled: false
        port: 6832
      thrift_compact:
        enabled: false
        port: 6831
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/v0.80.0/receiver/zipkinreceiver/config.go#L12
  zipkin:
    enabled: false
    port: 9411
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/v0.80.0/receiver/opencensusreceiver/config.go#L12
  opencensus:
    enabled: false
    port: 55678
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/v0.80.0/receiver/kafkareceiver/config.go#L35
  kafka:
    enabled: false

deploymentMode: AIO  # AIO | SimpleScalable

commons:
  replicas: null
  extraArgs: []

  labels: {}
  podLabels: {}
  annotations: {}
  podAnnotations: {}

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  schedulerName: null
  runtimeClassName: null
  priorityClassName: null

  affinity: {}
  tolerations: []
  nodeSelector: {}

  extraEnv: []
  extraEnvFrom: []
  extraVolumes: []
  extraVolumeMounts: []

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  podSecurityContext: {}
    # fsGroup: 2000

  podDisruptionBudget:
    enabled: false
    # minAvailable
    # maxUnavailable

  service:
    type: ClusterIP
    clusterIP:
    loadBalancerIP:
    loadBalancerClass:
    allocateLoadBalancerNodePorts: true
    nodePorts:
      http:
      grpc:
    sessionAffinity:
    sessionAffinityConfig:
    internalTrafficPolicy:
    externalTrafficPolicy:
    annotations: {}

## distributor + ingester
# write:
#   target: [write]
#   persistence:
#     enabled: false
#     storageClass: null
#     size: 10Gi
#     annotations: {}

## querier + query-frontend
# read:
#   target: [read]
#   autoscaling:
#     enabled: false
#     minReplicas: 1
#     maxReplicas: 100
#     metrics: []
#     # - type: Resource
#     #   resource:
#     #     name: cpu
#     #     target:
#     #       averageUtilization: 80

## alertmanager + compactor + ruler + store-gateway + query-scheduler
# backend:
#   target: [backend]
#   persistence:
#     enabled: false
#     storageClass: null
#     size: 10Gi
#     annotations: {}

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true
  imagePullSecrets: []

ingress:  # TODO
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

metrics:
  enabled: false
  podMonitor:
    enabled: false
